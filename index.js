const express = require('express');
const app = express();
const http = require('http');
const server = http.createServer(app);
const port = 3000;

const { Server } = require("socket.io");
const io = new Server(server);

const fs = require('fs');


app.use(express.static('public'));

function stateToVerilog(state) {
  try{
    let file = fs.openSync('./verilog/prueba.v', 'w');

    let buffer = "//File autogenerated\n//Made by alvarogd16\n";

    buffer += "module main();\n";

    buffer += "\n// Intermediate signals\n";
    state.intermediate_signals.forEach(signal => {
      buffer += `wire ${signal};\n`
    });

    buffer += "\n// Block (modules) instances\n";
    state.blocks_instances.forEach(block => {
      buffer += `${block.name} ${block.id} (\n`;

      block.ports.forEach(port => {
        buffer += `\t.${port.name}(${port.connect}),\n`;
      });
      
      buffer += ");\n";
    });


    buffer += "\nendmodule";
    fs.writeSync(file, buffer);

    fs.closeSync(file);

    console.log("Generated main.v");
  }
  catch(e) {
    console.error(e);
    return;
  }
}

io.on('connection', (socket) => {
  console.log(`Someone connected ${socket.id}`);

  socket.on("sendState", (state) => {
    console.log("Getted state");
    stateToVerilog(state);
  });
});

server.listen(port, () => {
  console.log(`Example app listening on port ${port}`)
})